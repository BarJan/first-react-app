[{"C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\index.js":"1","C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\App.js":"2","C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\reportWebVitals.js":"3","C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\models\\ActorClass.js":"4","C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\components\\Actor.js":"5","C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\pages\\ActorPage.js":"6","C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\pages\\MoviesPage.js":"7","C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\models\\MovieClass.js":"8","C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\components\\Movie.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":1108,"mtime":1609747440741,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":824,"mtime":1609454270022,"results":"14","hashOfConfig":"11"},{"size":618,"mtime":1609241382817,"results":"15","hashOfConfig":"11"},{"size":3634,"mtime":1609672254940,"results":"16","hashOfConfig":"11"},{"size":951,"mtime":1609456215912,"results":"17","hashOfConfig":"11"},{"size":704,"mtime":1609450521598,"results":"18","hashOfConfig":"11"},{"size":727,"mtime":1609670425618,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"da164z",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\index.js",[],["42","43"],"C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\App.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\reportWebVitals.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\models\\ActorClass.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\components\\Actor.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\pages\\ActorPage.js",["44"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Col, Container, Form, FormControl, InputGroup, Row } from \"react-bootstrap\";\r\nimport Actor from \"../components/Actor\";\r\nimport ActorClass from \"../models/ActorClass\";\r\n\r\n\r\nfunction ActorPage(props){\r\n\r\n    const {movieByActor} = props;\r\n\r\n    //initializing all actors objs into state\r\n    const [actorsData, setActorsData] = useState([]);\r\n    // initialize of filter state\r\n    const [cardsFilter, setCardsFilter] = useState(\"\");\r\n    // initialize of sort state\r\n    const [sortState, setSortState] = useState(\"fname\");\r\n\r\n        //the app will fetch and show only actors that matches the filtering input text from user\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"actors.json\").then(res=>{\r\n                const filt = res.data.map((plainActor)=> new ActorClass(plainActor)).filter(actor => ( actor.fname.toLowerCase().includes(cardsFilter.toLocaleLowerCase()) ||\r\n                actor.lname.toLowerCase().includes(cardsFilter.toLocaleLowerCase())));\r\n                setActorsData(filt);\r\n                const toShow = filt.map(actor=>actor.fname+\" \"+actor.lname);\r\n                movieByActor(toShow);\r\n        });\r\n\r\n        \r\n\r\n    }, [cardsFilter]);\r\n    \r\n\r\n    function compareActors(actorA, actorB) {\r\n        let compA, compB;\r\n        if(sortState!==\"age\"){\r\n            compA = actorA[sortState];\r\n            compB = actorB[sortState];\r\n        }\r\n        else{\r\n            compA = actorA.Age();\r\n            compB = actorB.Age();\r\n        }\r\n\r\n        if (compA < compB) {\r\n            return -1;\r\n          }\r\n          if (compA > compB) {\r\n            return 1;\r\n          }\r\n        \r\n          // names must be equal\r\n          return 0;\r\n    }\r\n    \r\n    //convert all (filtered) columns of the page, each contains 1 card    \r\n    const actorsCards = actorsData.sort((a,b) => compareActors(a,b)).map( (actor,index) => <Col key={index} lg={3} md={4} sm={6}><Actor actor={actor} /></Col>);\r\n    \r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <label htmlFor=\"basic-url\">Enter a name or part of it, to filter</label>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text id=\"basic-addon3\">\r\n                            Write here:\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl id=\"basic-url\" aria-describedby=\"basic-addon3\" value={cardsFilter} onChange ={(e) =>{\r\n                                                                                                                setCardsFilter(e.target.value);\r\n                                                                                                                    }\r\n                                                                                                                }/>\r\n                </InputGroup>\r\n\r\n                <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                    <Form.Label>Custom select</Form.Label>\r\n                        <Form.Control as=\"select\" value={sortState} custom onChange={e => setSortState(e.target.value)}>\r\n                            <option value=\"fname\">First name</option>\r\n                            <option value=\"lname\">Last name</option>\r\n                            <option value=\"age\">Age</option>\r\n                        </Form.Control>\r\n                </Form.Group>\r\n            </Row>\r\n            <Row>\r\n                {actorsCards}\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ActorPage;","C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\pages\\MoviesPage.js",["45","46","47"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Col, Container, Form, FormControl, InputGroup, Row } from \"react-bootstrap\";\r\nimport Movie from \"../components/Movie\";\r\nimport MovieClass from \"../models/MovieClass\";\r\n\r\nfunction MoviesPage(props) {\r\n    const {show} = props;\r\n    //initializing all actors objs into state\r\n    const [moviesData, setMoviesData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"movies.json\").then(res=>{\r\n                setMoviesData(res.data.map((plainMovie)=> new MovieClass(plainMovie)));\r\n        });\r\n    }, []);\r\n    const filtereData = moviesData.filter(movie => show.some(v => movie.mainActors.includes(v) ));\r\n    const moviesCards = filtereData.map( movie => <Col><Movie movie={movie} /></Col>);\r\n\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                {moviesCards}\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MoviesPage;","C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\models\\MovieClass.js",[],["48","49"],"C:\\Users\\barjan\\Desktop\\front-end\\22\\bar-1st-react-app\\src\\components\\Movie.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":32,"column":8,"nodeType":"56","endLine":32,"endColumn":21,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":26,"nodeType":"60","messageId":"61","endLine":3,"endColumn":30},{"ruleId":"58","severity":1,"message":"62","line":3,"column":32,"nodeType":"60","messageId":"61","endLine":3,"endColumn":43},{"ruleId":"58","severity":1,"message":"63","line":3,"column":45,"nodeType":"60","messageId":"61","endLine":3,"endColumn":55},{"ruleId":"50","replacedBy":"64"},{"ruleId":"52","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movieByActor'. Either include it or remove the dependency array.","ArrayExpression",["68"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'InputGroup' is defined but never used.",["66"],["67"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [cardsFilter, movieByActor]",{"range":"71","text":"72"},[1229,1242],"[cardsFilter, movieByActor]"]